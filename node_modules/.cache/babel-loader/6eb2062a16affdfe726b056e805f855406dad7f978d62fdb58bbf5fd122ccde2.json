{"ast":null,"code":"var _jsxFileName = \"/Users/sybaek/Documents/\\u1100\\u1162\\u1107\\u1161\\u11AF/study_project/study_project_front/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [output, setOutput] = useState([{\n    userId: ''\n  }]);\n  useEffect(() => {\n    try {\n      // 데이터를 받아오는 동안 시간이 소요됨으로 await 로 대기\n      const res = axios.get('/api/user/getUserList');\n      // 받아온 데이터로 다음 작업을 진행하기 위해 await 로 대기\n      // 받아온 데이터를 map 해주어 rowData 별로 _inputData 선언\n      const _output = res.data.map(rowData => ({\n        idx: rowData.userId\n      }));\n      // 선언된 _inputData 를 최초 선언한 inputData 에 concat 으로 추가\n      setOutput(output.concat(_output));\n    } catch (e) {\n      console.error(e.message);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"\\uBC31\\uC5D4\\uB4DC\\uC5D0\\uC11C \\uAC00\\uC838\\uC628 \\uB370\\uC774\\uD130\\uC785\\uB2C8\\uB2E4 : \", output.concat()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"thpeOXfoVctBpdPpJVY6hbiaYF8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useEffect","useState","axios","App","output","setOutput","userId","res","get","_output","data","map","rowData","idx","concat","e","console","error","message"],"sources":["/Users/sybaek/Documents/개발/study_project/study_project_front/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n    const [output, setOutput] = useState([{\n        userId: ''\n    }])\n\n    useEffect(() => {\n      try{\n            // 데이터를 받아오는 동안 시간이 소요됨으로 await 로 대기\n            const res = axios.get('/api/user/getUserList')\n            // 받아온 데이터로 다음 작업을 진행하기 위해 await 로 대기\n            // 받아온 데이터를 map 해주어 rowData 별로 _inputData 선언\n            const _output = res.data.map((rowData) => ({\n                    idx: rowData.userId\n                })\n            )\n            // 선언된 _inputData 를 최초 선언한 inputData 에 concat 으로 추가\n            setOutput(output.concat(_output))\n        } catch(e){\n            console.error(e.message)\n        }\n    }, []);\n\n    return (\n        <div>\n          백엔드에서 가져온 데이터입니다 : {output.concat()}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,GAAG,GAAG;EAAA;EACX,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,CAAC;IAClCK,MAAM,EAAE;EACZ,CAAC,CAAC,CAAC;EAEHN,SAAS,CAAC,MAAM;IACd,IAAG;MACG;MACA,MAAMO,GAAG,GAAGL,KAAK,CAACM,GAAG,CAAC,uBAAuB,CAAC;MAC9C;MACA;MACA,MAAMC,OAAO,GAAGF,GAAG,CAACG,IAAI,CAACC,GAAG,CAAEC,OAAO,KAAM;QACnCC,GAAG,EAAED,OAAO,CAACN;MACjB,CAAC,CAAC,CACL;MACD;MACAD,SAAS,CAACD,MAAM,CAACU,MAAM,CAACL,OAAO,CAAC,CAAC;IACrC,CAAC,CAAC,OAAMM,CAAC,EAAC;MACNC,OAAO,CAACC,KAAK,CAACF,CAAC,CAACG,OAAO,CAAC;IAC5B;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAA,wGACsBd,MAAM,CAACU,MAAM,EAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/B;AAEd;AAAC,GA3BQX,GAAG;AAAA,KAAHA,GAAG;AA6BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}